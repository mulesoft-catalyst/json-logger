<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:json-logger="http://www.mulesoft.org/schema/mule/json-logger" xmlns:scripting="http://www.mulesoft.org/schema/mule/scripting" xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xmlns:spring="http://www.springframework.org/schema/beans" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-current.xsd
http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/scripting http://www.mulesoft.org/schema/mule/scripting/current/mule-scripting.xsd
http://www.mulesoft.org/schema/mule/json-logger http://www.mulesoft.org/schema/mule/json-logger/current/mule-json-logger.xsd">
    
    <sub-flow name="get:/log:api-impl">
        <json-logger:logger config-ref="JSON_Logger__Logger_Configuration" doc:name="JSON: START">
            <json-logger:logger-json message="#[payload]"/>
        </json-logger:logger>
        <scripting:component doc:name="Mock: Backend Response">
            <scripting:script engine="Groovy"><![CDATA[Thread.sleep(200);
return '{"message":"mocked backend response"}']]></scripting:script>
        </scripting:component>
        <json-logger:logger config-ref="JSON_Logger__Logger_Configuration" doc:name="JSON: AFTER_API_OR_BACKEND">
            <json-logger:logger-json tracePoint="AFTER_API_OR_BACKEND" message="#[payload]"/>
        </json-logger:logger>
        <set-payload value="#['{&quot;message&quot;:&quot;mocked data transformation&quot;}']" mimeType="application/json" doc:name="Mock: Data Transformation"/>
        <json-logger:logger config-ref="JSON_Logger__Logger_Configuration" doc:name="JSON: END">
            <json-logger:logger-json tracePoint="END" message="#[payload]"/>
        </json-logger:logger>
    </sub-flow>
    <sub-flow name="get:/elapsedTimers:api-impl">
        <json-logger:logger config-ref="JSON_Logger__Logger_Configuration" doc:name="JSON: START">
            <json-logger:logger-json message="#[payload]"/>
        </json-logger:logger>
        <set-payload value="#[['A','B','C']]" doc:name="Mock: Array"/>
        <foreach doc:name="For Each">
            <flow-ref name="mock-sub-process" doc:name="mock-sub-process"/>
        </foreach>
        <json-logger:logger config-ref="JSON_Logger__Logger_Configuration" doc:name="JSON: END">
            <json-logger:logger-json tracePoint="END" message="#[payload]"/>
        </json-logger:logger>
    </sub-flow>    
    <sub-flow name="mock-sub-process">
        <json-logger:logger config-ref="JSON_Logger__Logger_Configuration" timerVariable="#[flowVars['innerTimerVariable'+flowVars.counter]]" doc:name="JSON: BEFORE_API_OR_BACKEND">
            <json-logger:logger-json tracePoint="BEFORE_API_OR_BACKEND" message="#[payload]"/>
        </json-logger:logger>
        <scripting:component doc:name="Mock: Sub Process">
            <scripting:script engine="Groovy"><![CDATA[Thread.sleep(100);
return '{"message":'+payload+'}']]></scripting:script>
        </scripting:component>
        <json-logger:logger config-ref="JSON_Logger__Logger_Configuration" timerVariable="#[flowVars['innerTimerVariable'+flowVars.counter]]" doc:name="JSON: AFTER_API_OR_BACKEND">
            <json-logger:logger-json tracePoint="AFTER_API_OR_BACKEND" message="#[payload]"/>
        </json-logger:logger>
    </sub-flow>
</mule>
